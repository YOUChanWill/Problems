package 动态规划;

public class DB {

    /**剑指 Offer 10- I. 斐波那契数列

     写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项（即 F(N)）。斐波那契数列的定义如下：

     F(0) = 0,   F(1) = 1
     F(N) = F(N - 1) + F(N - 2), 其中 N > 1.
     斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出。

     答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。*/
    public int fib(int n) {

    }




    /**剑指 Offer 10- II. 青蛙跳台阶问题

     一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。

     答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。*/
    public int numWays(int n) {

    }



}
